/*
  Lecture du port série
    - Change la couleur de la led RGB en fonction de la valeur reçue
*/


#include <ChainableLED.h>
#include <Wire.h>
#include "rgb_lcd.h"

  String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete
String commandString = "";

#define NUM_LEDS  1


ChainableLED leds(4, 5, NUM_LEDS);
rgb_lcd ecran;


void setup()
{
  Serial.begin(9600);
  leds.init();
  leds.setColorRGB(0, 255, 0, 0);
  
  ecran.begin(16, 2);    
  ecran.setRGB(255, 0, 0);
  ecran.print("hello, world!");
    
  delay(1000);
  leds.setColorRGB(0, 0, 0, 0);
}

void loop()
{
  if(Serial.available() > 0)
  {
    String serialInput = Serial.readString();
    
    if(serialInput == "proc")
    {
      ecran.clear();
      ecran.print("procedure1");
    }
    else if(serialInput == "vert")
    {
        leds.setColorRGB(0, 0, 255, 0);
    }
        else if(serialInput == "bleu")
    {
        leds.setColorRGB(0, 0, 0, 255);
    }
    else
    {
          int vecteurRGB[3];
          // char string[] = "0/255/0";
          
          char* p = const_cast<char*>(serialInput.c_str());
          
          char delimiter[] = "/";
          char* explode = strtok(p, delimiter);

          int k=-1;
          while(explode != NULL)
          {
              k++;
              vecteurRGB[k]=atoi(explode);
              explode = strtok(NULL, delimiter);
          }
      
          // Serial.print(sizeof(vecteurRGB));
          for(int k=0; k<3;k++)
          {
            // Serial.println(vecteurRGB[k]);
          }
          leds.setColorRGB(0,vecteurRGB[0],vecteurRGB[1],vecteurRGB[2]);
          ecran.clear();
          ecran.print(String(vecteurRGB[0])+" "+String(vecteurRGB[1])+" "+String(vecteurRGB[2]));
    }
    
    
  }
}
